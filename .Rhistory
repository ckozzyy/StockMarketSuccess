#Installing quantmod
install.packages("quantmod")
library("quantmod")
#Task: get data into file
getSymbols(Symbols = "TSLA", auto.assign = TRUE)
plot(TSLA$TSLA.Close)
#holt winters forecasting
TSLA.pred <- HoltWinters(TSLA$TSLA.Close, beta = FALSE, gamma = FALSE)
TSLA.pred
plot(TSLA.pred)
install.packages("forecast")
library("forecast")
TSLA.pred2 <- forecast:::forecast.HoltWinters(TSLA.pred, h = 100)
TSLA.pred2
forecast:::plot.forecast(TSLA.pred2)
#neural networks
install.packages("neuralnet")
library("neuralnet")
?neuralnet
TSLA
head(TSLA)
TSLA.neural <- neuralnet(Predicted~TSLA$TSLA.Open + TSLA$TSLA.High + TSLA$TSLA.Low + TSLA$TSLA.Volume, data = TSLA)
TSLA.neural <- neuralnet(TSLA.$TSLA.Close~TSLA$TSLA.Open + TSLA$TSLA.High + TSLA$TSLA.Low + TSLA$TSLA.Volume, data = TSLA)
TSLA.neural <- neuralnet(TSLA.Close~TSLA$TSLA.Open + TSLA$TSLA.High + TSLA$TSLA.Low + TSLA$TSLA.Volume, data = TSLA)
TSLA.neural <- neuralnet(TSLA.Close~TSLA.Open + TSLA.High + TSLA.Low + TSLA.Volume, data = TSLA)
plot(TSLA.neural)
plot(TSLA.neural)
prediction(TSLA.neural)
plot(prediction(TSLA.neural))
?prediction
plot(TSLA.neural)
nrow(TSLA)
TSLA.train <- TSLA[1:1656] #75% of data set
TSLA.test <- TSLA[1657:]
TSLA.test <- TSLA[1657:,]
TSLA.train <- TSLA[1:1656] #75% of data set
TSLA.test <- TSLA[1657:2208]
TSLA.neural <- neuralnet(TSLA.Close~TSLA.Open + TSLA.High + TSLA.Low + TSLA.Volume, data = TSLA.train)
TSLA.train <- TSLA[1:1656] #75% of data set
TSLA.test <- TSLA[1657:2208]
TSLA.neural <- neuralnet(TSLA.Close~TSLA.Open + TSLA.High + TSLA.Low + TSLA.Volume, data = TSLA.train)
plot(TSLA.neural)
TSLA.predict <- compute(TSLA.neural, TSLA.test)
TSLA.predict$net.result
TSLA.train <- TSLA[1:1656] #75% of data set
TSLA.test <- TSLA[1657:2208]
TSLA.neural <- neuralnet(TSLA.Close~TSLA.Open + TSLA.High + TSLA.Low , data = TSLA.train)
plot(TSLA.neural)
TSLA.predict <- compute(TSLA.neural, TSLA.test)
TSLA.predict$net.result
plot(TSLA.train)
plot(TSLA.test)
plot(TSLA.train)
plot(TSLA.train)
plot(TSLA)
plot(TSLA$TSLA.Close)
plot(TSLA.train$TSLA.Close)
plot(TSLA.test$TSLA.close)
plot(TSLA.test$TSLA.close)
plot(TSLA.test$TSLA.Close)
TSLA.train <- TSLA[1:1656] #75% of data set
TSLA.test <- TSLA[1657:2208]
plot(TSLA$TSLA.Close)
plot(TSLA.train$TSLA.Close)
plot(TSLA.test$TSLA.Close)
TSLA.neural <- neuralnet(TSLA.Close~TSLA.Open + TSLA.High + TSLA.Low , data = TSLA.train)
plot(TSLA.neural)
TSLA.predict <- compute(TSLA.neural, TSLA.test)
plot(TSLA.predict$net.result)
plot(TSLA.neural)
TSLA.neural <- neuralnet(TSLA.Close~TSLA.Open:TSLA.Volume + TSLA.High + TSLA.Low , data = TSLA.train)
plot(TSLA.neural)
TSLA.predict <- compute(TSLA.neural, TSLA.test)
plot(TSLA.predict$net.result)
TSLA.neural <- neuralnet(TSLA.Close~TSLA.Open:TSLA.Volume + TSLA.High + TSLA.Low , data = TSLA.train)
TSLA.neural <- neuralnet(TSLA.Close~TSLA.Open+TSLA.Volume + TSLA.High + TSLA.Low , data = TSLA.train)
plot(TSLA.neural)
